{"version":3,"file":"formie-widgets.js","sources":["../../src/js/formie-widgets.js"],"sourcesContent":["// CSS needs to be imported here as it's treated as a module\nimport '../scss/formie-widgets.scss';\n\nif (typeof Craft.Formie === typeof undefined) {\n    Craft.Formie = {};\n}\n\nCraft.Formie.ChartColors = {\n    blue: {\n        bg: 'rgba(66,153,225, 0.1)',\n        border: '#4299E1',\n    },\n    cyan: {\n        bg: 'rgba(56, 190, 201, 0.1)',\n        border: 'rgba(56, 190, 201, 0.75)',\n    },\n    orange: {\n        bg: 'rgba(237, 137, 54, 0.1)',\n        border: '#ED8936',\n    },\n    red: {\n        bg: 'rgba(245, 101, 101, 0.1)',\n        border: '#F56565',\n    },\n    green: {\n        bg: 'rgba(72, 187, 120, 0.1)',\n        border: '#48BB78',\n    },\n    purple: {\n        bg: 'rgba(128, 90, 213, 0.1)',\n        border: '#805AD5',\n    },\n    grey: {\n        bg: 'rgb(160, 174, 192, 0.1)',\n        border: '#A0AEC0',\n    },\n\n    gridLines: 'rgba(155, 155, 155, 0.1)',\n    text: 'hsl(209, 18%, 30%)',\n\n    bgColors() {\n        return [\n            this.blue.bg,\n            this.red.bg,\n            this.orange.bg,\n            this.green.bg,\n            this.purple.bg,\n            this.cyan.bg,\n        ];\n    },\n\n    borderColors() {\n        return [\n            this.blue.border,\n            this.red.border,\n            this.orange.border,\n            this.green.border,\n            this.purple.border,\n            this.cyan.border,\n        ];\n    },\n\n    doughnutColors() {\n        return [\n            this.blue.border,\n            this.red.border,\n            this.orange.border,\n            this.green.border,\n            this.purple.border,\n            this.grey.border,\n        ];\n    },\n};\n\nCraft.Formie.ChartCurrencyTicks = function(value, index, values) {\n    return new Intl.NumberFormat(window.formieCurrentLocale, { style: 'currency', currency: window.formieCurrency }).format(value);\n};\n\nCraft.Formie.Chart = Garnish.Base.extend({\n\n    /**\n     * Default options key'd by chart type\n     */\n    defaults: {\n        general: {\n            options: {\n                legend: {\n                    labels: {\n                        boxWidth: 8,\n                        usePointStyle: true,\n                    },\n                    onClick(event, label) {\n                        return false;\n                    },\n                },\n                tooltips: {\n                    bodyFontColor: Craft.Formie.ChartColors.text,\n                    backgroundColor: '#fff',\n                    borderColor: Craft.Formie.ChartColors.gridLines,\n                    borderWidth: 1,\n                    caretPadding: 6,\n                    caretSize: 0,\n                    mode: 'index',\n                    titleFontColor: Craft.Formie.ChartColors.text,\n\n                    enabled: false,\n                    callbacks: {\n                        title(tooltipItems, data) {\n                            var title = '';\n\n                            if (tooltipItems[0].xLabel) {\n                                title = tooltipItems[0].xLabel;\n                                var format = 'MMM D';\n                                var allFirstOfMonth = true;\n\n                                data.labels.forEach((label) => {\n                                    // eslint-disable-next-line\n                                    if (!label.match(/^\\d{4}\\-\\d{2}\\-01$/g)) {\n                                        allFirstOfMonth = false;\n                                    }\n                                });\n\n                                if (allFirstOfMonth) {\n                                    format = 'MMM YYYY';\n                                }\n\n                                title = moment(title).format(format);\n                            }\n\n                            return title;\n                        },\n                        label(tooltipItem, data) {\n                            var label;\n                            if (tooltipItem.yLabel == '') {\n                                label = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n                            } else {\n                                label = tooltipItem.yLabel;\n                            }\n\n                            if (data.datasets[tooltipItem.datasetIndex].yAxisID && data.datasets[tooltipItem.datasetIndex].yAxisID == 'revenue') {\n                                label = Craft.Formie.ChartCurrencyTicks(label, 0, []);\n                            } else {\n                                label = Craft.formatNumber(label);\n                            }\n\n                            return label;\n                        },\n                    },\n                    custom(tooltipModel) {\n                        // Tooltip Element\n                        var tooltipEl = document.getElementById('chartjs-tooltip');\n\n                        // Create element on first render\n                        if (!tooltipEl) {\n                            tooltipEl = document.createElement('div');\n                            tooltipEl.id = 'chartjs-tooltip';\n                            tooltipEl.innerHTML = '<div class=\"chartjs-tooltip-container\"></div>';\n                            document.body.appendChild(tooltipEl);\n                        }\n\n                        tooltipEl.classList.add('formie-widget-chart-tooltip');\n\n                        // Hide if no tooltip\n                        if (tooltipModel.opacity === 0) {\n                            tooltipEl.style.opacity = 0;\n                            return;\n                        }\n\n                        // Set caret Position\n                        tooltipEl.classList.remove('above', 'below', 'no-transform');\n                        if (tooltipModel.yAlign) {\n                            tooltipEl.classList.add(tooltipModel.yAlign);\n                        } else {\n                            tooltipEl.classList.add('no-transform');\n                        }\n\n                        function getBody(bodyItem) {\n                            return bodyItem.lines;\n                        }\n\n                        // Set Text\n                        if (tooltipModel.body) {\n                            var titleLines = tooltipModel.title || [];\n                            var bodyLines = tooltipModel.body.map(getBody);\n                            var { dataPoints } = tooltipModel;\n\n                            var innerHtml = '<div>';\n\n                            titleLines.forEach((title) => {\n                                if (title && title != 'null') {\n                                    innerHtml += '<h3>' + title + '</h3>';\n                                }\n                            });\n\n                            bodyLines.forEach((body, i) => {\n                                var colors = tooltipModel.labelColors[i];\n                                var style = 'background:' + colors.backgroundColor;\n                                style += '; border-color:' + colors.borderColor;\n                                var span = '<span class=\"legend-dot\" style=\"' + style + '\"></span>';\n                                innerHtml += '<div class=\"formie-widget-chart-tooltip-items\">' + span + '<span>' + body + '</span>' + '</div>';\n                            });\n                            innerHtml += '</div>';\n\n                            var tableRoot = tooltipEl.querySelector('.chartjs-tooltip-container');\n                            tableRoot.innerHTML = innerHtml;\n                        }\n\n                        // `this` will be the overall tooltip\n                        var position = this._chart.canvas.getBoundingClientRect();\n\n                        // Display, position, and set styles for font\n                        tooltipEl.style.opacity = 1;\n                        tooltipEl.style.position = 'absolute';\n                        tooltipEl.style.left = position.left + window.pageXOffset + tooltipModel.caretX + 'px';\n                        tooltipEl.style.top = position.top + window.pageYOffset + tooltipModel.caretY + 'px';\n                        tooltipEl.style.fontFamily = tooltipModel._bodyFontFamily;\n                        tooltipEl.style.fontSize = tooltipModel.bodyFontSize + 'px';\n                        tooltipEl.style.fontStyle = tooltipModel._bodyFontStyle;\n                        tooltipEl.style.pointerEvents = 'none';\n                    },\n                },\n            },\n        },\n        line: {\n            options: {\n                aspectRatio: 2.5,\n                legend: {\n                    labels: {\n                        boxWidth: 6,\n                    },\n                },\n                tooltips: {\n                    intersect: false,\n                },\n            },\n        },\n        doughnut: {\n            options: {\n                aspectRatio: 1,\n                cutoutPercentage: 60,\n                legend: {\n                    position: 'bottom',\n                },\n            },\n        },\n    },\n\n    /**\n     * Default dataset options key'd by chart type\n     */\n    datasetDefaults: {\n        general: {\n\n        },\n        doughnut: {\n            backgroundColor: Craft.Formie.ChartColors.doughnutColors(),\n            borderColor: Craft.Formie.ChartColors.doughnutColors(),\n            borderWidth: 0,\n        },\n        line: {\n            borderWidth: 3,\n            pointRadius: 2,\n            pointHitRadius: 4,\n            lineTension: 0,\n        },\n    },\n\n    /**\n     * Global defaults\n     */\n    globalDefaults: {\n        defaultFontFamily: 'system-ui, BlinkMacSystemFont, -apple-system, \\'Segoe UI\\', \\'Roboto\\', \\'Oxygen\\', \\'Ubuntu\\', \\'Cantarell\\', \\'Fira Sans\\', \\'Droid Sans\\', \\'Helvetica Neue\\', sans-serif',\n    },\n\n    /**\n     * RTL options\n     * These are separated from the defaults so they are forced\n     */\n    rtl: false,\n    rtlDefaults: {\n        options: {\n            legend: {\n                rtl: true,\n            },\n            tooltips: {\n                rtl: true,\n            },\n        },\n    },\n\n    chart: null,\n\n    init(id, settings) {\n        moment.locale(window.formieCurrentLocale);\n\n        this.$container = $('#' + id);\n        this.rtl = $('body').hasClass('rtl');\n\n        if (this.$container.length && settings.chart) {\n            var options = this.getDefaultOptions(settings.chart.type);\n\n            // Merge user defined options with defaults\n            options = deepmerge(options, settings.chart);\n\n            options = this.mergeRtlOptions(options);\n\n            if (options.data && options.data.datasets && options.data.datasets.length) {\n                options.data.datasets = this.mergeDatasetsDefaults(options.data.datasets, options.type);\n            }\n\n            this.renderChart(options);\n        }\n    },\n\n    getDefaultOptions(type) {\n        var options = this.defaults.general;\n\n        if (this.defaults[type]) {\n            options = deepmerge(options, this.defaults[type]);\n        }\n\n        return options;\n    },\n\n    mergeDatasetsDefaults(datasets, type) {\n        if (this.datasetDefaults[type] == undefined) {\n            return datasets;\n        }\n\n        var mergedDatasets = [];\n        var colorsIndex = 0;\n        var tmp;\n\n        for (var i = 0; i < datasets.length; i++) {\n            tmp = deepmerge(this.datasetDefaults[type], datasets[i]);\n\n            // Loop through colours for line charts\n            if (type == 'line') {\n                tmp = deepmerge(tmp, {\n                    backgroundColor: Craft.Formie.ChartColors.bgColors()[colorsIndex],\n                    borderColor: Craft.Formie.ChartColors.borderColors()[colorsIndex],\n                    pointBackgroundColor: Craft.Formie.ChartColors.borderColors()[colorsIndex],\n                });\n            }\n\n            mergedDatasets.push(tmp);\n\n            colorsIndex++;\n            if (colorsIndex == Craft.Formie.ChartColors.bgColors().length) {\n                colorsIndex = 0;\n            }\n        }\n\n        return mergedDatasets;\n    },\n\n    mergeRtlOptions(options) {\n        if (!this.rtl) {\n            return options;\n        }\n\n        return deepmerge(options, this.rtlDefaults);\n    },\n\n    renderChart(options) {\n        Chart.defaults.global = deepmerge(Chart.defaults.global, this.globalDefaults);\n\n        this.chart = new Chart(this.$container, options);\n    },\n});\n"],"names":[],"mappings":"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"}